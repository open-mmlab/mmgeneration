name: build

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'docs/**'

  pull_request:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cuda101:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.7]
        torch:
          [
            1.5.1+cu101,
            1.7.0+cu101,
            1.8.0+cu101
          ]
        include:
          - torch: 1.5.1+cu101
            torch_version: torch1.5
            torchvision: 0.6.1+cu101
            mmcv: 1.5.0
          - torch: 1.7.0+cu101
            torch_version: torch1.7
            torchvision: 0.8.1+cu101
            mmcv: 1.7.0
          - torch: 1.8.0+cu101
            torch_version: torch1.8
            torchvision: 0.9.0+cu101
            mmcv: 1.8.0

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python -m pip install pip --upgrade
      - name: Install Pillow
        run: python -m pip install Pillow==6.2.2
        if: ${{matrix.torchvision < 0.5}}
      - name: Install PyTorch
        run: python -m pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install mmgen dependencies
        run: |
          python -V
          python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu101/torch${{matrix.mmcv}}/index.html
          python -m pip install -r requirements.txt
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Build and install
        run: |
          rm -rf .eggs
          python setup.py check -m -s
          TORCH_CUDA_ARCH_LIST=7.0 pip install .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmgen -m pytest tests/
          coverage xml
          coverage report -m
      - name: Upload coverage to Codecov
        if: ${{matrix.torch == '1.7.0+cu101' && matrix.python-version == '3.7'}}
        uses: codecov/codecov-action@v1.0.10
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  build_cuda102:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.7, 3.9]
        torch: [1.9.0+cu102]
        include:
          - torch: 1.9.0+cu102
            torch_version: torch1.9
            torchvision: 0.10.0+cu102
            mmcv: 1.9.0

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pillow
        run: python -m pip install Pillow==6.2.2
        if: ${{matrix.torchvision < 0.5}}
      - name: Install PyTorch
        run: python -m pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install mmgen dependencies
        run: |
          python -V
          python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu102/torch${{matrix.mmcv}}/index.html
          python -m pip install -r requirements.txt
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Build and install
        run: |
          rm -rf .eggs
          python setup.py check -m -s
          TORCH_CUDA_ARCH_LIST=7.0 pip install .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmgen -m pytest tests/
          coverage xml
          coverage report -m
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  test_windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        python: [3.8]
        platform: [cpu]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Upgrade pip
        run: pip install pip --upgrade --user
      - name: Install OpenCV
        run: pip install opencv-python>=3
      - name: Install PyTorch
        # As a complement to Linux CI, we test on PyTorch LTS version
        run: pip install torch==1.8.2+${{ matrix.platform }} torchvision==0.9.2+${{ matrix.platform }} -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
      - name: Install MMCV
        run: pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8/index.html --only-binary mmcv-full
      - name: Install unittest dependencies
        run: pip install -r requirements.txt
      - name: Show pip list
        run: pip list
      - name: Build and install
        run: pip install -e .
      - name: Run unittests
        run: coverage run --branch --source mmgen -m pytest tests/
      - name: Generate coverage report
        run: |
          coverage xml
          coverage report -m
